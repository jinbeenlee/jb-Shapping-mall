import'../../../core-js/modules/es.array.index-of.js';import'../../../core-js/modules/es.array.splice.js';import'../../../core-js/modules/es.promise.js';import _ref2 from'./CanceledError.js';const _ref={exports:{}};(function(module,exports){function CancelToken(executor){if("function"!=typeof executor)throw new TypeError("executor must be a function.");var resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});var token=this;this.promise.then(function(cancel){if(token._listeners){var i,l=token._listeners.length;for(i=0;i<l;i++)token._listeners[i](cancel);token._listeners=null;}}),this.promise.then=function(onfulfilled){var _resolve,promise=new Promise(function(resolve){token.subscribe(resolve),_resolve=resolve;}).then(onfulfilled);return promise.cancel=function reject(){token.unsubscribe(_resolve);},promise},executor(function cancel(message){token.reason||(token.reason=new _ref2(message),resolvePromise(token.reason));});}CancelToken.prototype.throwIfRequested=function throwIfRequested(){if(this.reason)throw this.reason},CancelToken.prototype.subscribe=function subscribe(listener){return this.reason?void listener(this.reason):void(this._listeners?this._listeners.push(listener):this._listeners=[listener])},CancelToken.prototype.unsubscribe=function unsubscribe(listener){if(this._listeners){var index=this._listeners.indexOf(listener);-1!==index&&this._listeners.splice(index,1);}},CancelToken.source=function source(){var cancel,token=new CancelToken(function executor(c){cancel=c;});return {token:token,cancel:cancel}},module.exports=CancelToken;})(_ref);var _ref3 = _ref.exports;export default _ref3;