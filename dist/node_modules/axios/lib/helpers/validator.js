import _ref7 from'../core/AxiosError.js';import _ref5 from'../env/data.js';const _ref={exports:{}};(function(module,exports){function assertOptions(options,schema,allowUnknown){if("object"!=typeof options)throw new _ref7("options must be an object",_ref7.ERR_BAD_OPTION_VALUE);for(var keys=Object.keys(options),i=keys.length;0<i--;){var opt=keys[i],validator=schema[opt];if(validator){var value=options[opt],result=value===void 0||validator(value,opt,options);if(!0!==result)throw new _ref7("option "+opt+" must be "+result,_ref7.ERR_BAD_OPTION_VALUE);continue}if(!0!==allowUnknown)throw new _ref7("Unknown option "+opt,_ref7.ERR_BAD_OPTION)}}var VERSION=_ref5.version,validators={};["object","boolean","number","function","string","symbol"].forEach(function(type,i){validators[type]=function validator(thing){return typeof thing===type||"a"+(1>i?"n ":" ")+type};});var deprecatedWarnings={};validators.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return "[Axios v"+VERSION+"] Transitional option '"+opt+"'"+desc+(message?". "+message:"")}return function(value,opt,opts){if(!1===validator)throw new _ref7(formatMessage(opt," has been removed"+(version?" in "+version:"")),_ref7.ERR_DEPRECATED);return version&&!deprecatedWarnings[opt]&&(deprecatedWarnings[opt]=!0,console.warn(formatMessage(opt," has been deprecated since v"+version+" and will be removed in the near future"))),!validator||validator(value,opt,opts)}},module.exports={assertOptions:assertOptions,validators:validators};})(_ref);var validator = _ref.exports;export default validator;