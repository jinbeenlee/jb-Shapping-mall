import'../../../core-js/modules/es.promise.js';import utils from'../utils.js';import _ref2 from'../cancel/CanceledError.js';import defaults from'../defaults/index.js';import transformData from'./transformData.js';import _ref4 from'../cancel/isCancel.js';const _ref={exports:{}};(function(module,exports){function throwIfCancellationRequested(config){if(config.cancelToken&&config.cancelToken.throwIfRequested(),config.signal&&config.signal.aborted)throw new _ref2}module.exports=function dispatchRequest(config){throwIfCancellationRequested(config),config.headers=config.headers||{},config.data=transformData.call(config,config.data,config.headers,config.transformRequest),config.headers=utils.merge(config.headers.common||{},config.headers[config.method]||{},config.headers),utils.forEach(["delete","get","head","post","put","patch","common"],function cleanHeaderConfig(method){delete config.headers[method];});var adapter=config.adapter||defaults.adapter;return adapter(config).then(function onAdapterResolution(response){return throwIfCancellationRequested(config),response.data=transformData.call(config,response.data,response.headers,config.transformResponse),response},function onAdapterRejection(reason){return _ref4(reason)||(throwIfCancellationRequested(config),reason&&reason.response&&(reason.response.data=transformData.call(config,reason.response.data,reason.response.headers,config.transformResponse))),Promise.reject(reason)})};})(_ref);var dispatchRequest = _ref.exports;export default dispatchRequest;