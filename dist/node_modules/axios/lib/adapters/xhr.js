import'../../../core-js/modules/es.array.index-of.js';import'../../../core-js/modules/es.promise.js';import utils from'../utils.js';import buildURL from'../helpers/buildURL.js';import _ref7 from'../core/AxiosError.js';import transitionalDefaults from'../defaults/transitional.js';import settle from'../core/settle.js';import cookies from'../helpers/cookies.js';import buildFullPath from'../core/buildFullPath.js';import parseHeaders from'../helpers/parseHeaders.js';import isURLSameOrigin from'../helpers/isURLSameOrigin.js';import _ref2$1 from'../cancel/CanceledError.js';import parseProtocol from'../helpers/parseProtocol.js';const _ref={exports:{}};(function(module,exports){module.exports=function xhrAdapter(config){return new Promise(function dispatchXhrRequest(resolve,reject){function done(){config.cancelToken&&config.cancelToken.unsubscribe(onCanceled),config.signal&&config.signal.removeEventListener("abort",onCanceled);}function onloadend(){if(request){var responseHeaders="getAllResponseHeaders"in request?parseHeaders(request.getAllResponseHeaders()):null,responseData=responseType&&"text"!==responseType&&"json"!==responseType?request.response:request.responseText,response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config:config,request:request};settle(function _resolve(value){resolve(value),done();},function _reject(err){reject(err),done();},response),request=null;}}var onCanceled,requestData=config.data,requestHeaders=config.headers,responseType=config.responseType;utils.isFormData(requestData)&&utils.isStandardBrowserEnv()&&delete requestHeaders["Content-Type"];var request=new XMLHttpRequest;if(config.auth){var username=config.auth.username||"",password=config.auth.password?unescape(encodeURIComponent(config.auth.password)):"";requestHeaders.Authorization="Basic "+btoa(username+":"+password);}var fullPath=buildFullPath(config.baseURL,config.url);if(request.open(config.method.toUpperCase(),buildURL(fullPath,config.params,config.paramsSerializer),!0),request.timeout=config.timeout,"onloadend"in request?request.onloadend=onloadend:request.onreadystatechange=function handleLoad(){request&&4===request.readyState&&(0!==request.status||request.responseURL&&0===request.responseURL.indexOf("file:"))&&setTimeout(onloadend);},request.onabort=function handleAbort(){request&&(reject(new _ref7("Request aborted",_ref7.ECONNABORTED,config,request)),request=null);},request.onerror=function handleError(){reject(new _ref7("Network Error",_ref7.ERR_NETWORK,config,request,request)),request=null;},request.ontimeout=function handleTimeout(){var timeoutErrorMessage=config.timeout?"timeout of "+config.timeout+"ms exceeded":"timeout exceeded",transitional=config.transitional||transitionalDefaults;config.timeoutErrorMessage&&(timeoutErrorMessage=config.timeoutErrorMessage),reject(new _ref7(timeoutErrorMessage,transitional.clarifyTimeoutError?_ref7.ETIMEDOUT:_ref7.ECONNABORTED,config,request)),request=null;},utils.isStandardBrowserEnv()){var xsrfValue=(config.withCredentials||isURLSameOrigin(fullPath))&&config.xsrfCookieName?cookies.read(config.xsrfCookieName):void 0;xsrfValue&&(requestHeaders[config.xsrfHeaderName]=xsrfValue);}"setRequestHeader"in request&&utils.forEach(requestHeaders,function setRequestHeader(val,key){"undefined"==typeof requestData&&"content-type"===key.toLowerCase()?delete requestHeaders[key]:request.setRequestHeader(key,val);}),utils.isUndefined(config.withCredentials)||(request.withCredentials=!!config.withCredentials),responseType&&"json"!==responseType&&(request.responseType=config.responseType),"function"==typeof config.onDownloadProgress&&request.addEventListener("progress",config.onDownloadProgress),"function"==typeof config.onUploadProgress&&request.upload&&request.upload.addEventListener("progress",config.onUploadProgress),(config.cancelToken||config.signal)&&(onCanceled=function(cancel){request&&(reject(!cancel||cancel&&cancel.type?new _ref2$1:cancel),request.abort(),request=null);},config.cancelToken&&config.cancelToken.subscribe(onCanceled),config.signal&&(config.signal.aborted?onCanceled():config.signal.addEventListener("abort",onCanceled))),requestData||(requestData=null);var protocol=parseProtocol(fullPath);return protocol&&-1===["http","https","file"].indexOf(protocol)?void reject(new _ref7("Unsupported protocol "+protocol+":",_ref7.ERR_BAD_REQUEST,config)):void request.send(requestData)})};})(_ref);var _ref2 = _ref.exports;export default _ref2;