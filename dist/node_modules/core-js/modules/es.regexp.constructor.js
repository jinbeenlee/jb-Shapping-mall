import global from'../internals/global.js';import fails from'../internals/fails.js';import DESCRIPTORS from'../internals/descriptors.js';import _ref2 from'../internals/object-define-property.js';import _ref4 from'../internals/internal-state.js';import redefine from'../internals/redefine.js';import _ref3 from'../internals/object-get-own-property-names.js';import isForced from'../internals/is-forced.js';import wellKnownSymbol from'../internals/well-known-symbol.js';import getFlags from'../internals/regexp-flags.js';import stickyHelpers from'../internals/regexp-sticky-helpers.js';import setSpecies from'../internals/set-species.js';import isRegExp from'../internals/is-regexp.js';import inheritIfRequired from'../internals/inherit-if-required.js';(function(module,exports){var defineProperty=_ref2.f,getOwnPropertyNames=_ref3.f,setInternalState=_ref4.set,MATCH=wellKnownSymbol("match"),NativeRegExp=global.RegExp,RegExpPrototype=NativeRegExp.prototype,re1=/a/g,re2=/a/g,CORRECT_NEW=new NativeRegExp(re1)!==re1,UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y,FORCED=DESCRIPTORS&&isForced("RegExp",!CORRECT_NEW||UNSUPPORTED_Y||fails(function(){return re2[MATCH]=!1,NativeRegExp(re1)!=re1||NativeRegExp(re2)==re2||"/a/i"!=NativeRegExp(re1,"i")}));if(FORCED){for(var RegExpWrapper=function RegExp(pattern,flags){var sticky,thisIsRegExp=this instanceof RegExpWrapper,patternIsRegExp=isRegExp(pattern),flagsAreUndefined=void 0===flags;if(!thisIsRegExp&&patternIsRegExp&&pattern.constructor===RegExpWrapper&&flagsAreUndefined)return pattern;CORRECT_NEW?patternIsRegExp&&!flagsAreUndefined&&(pattern=pattern.source):pattern instanceof RegExpWrapper&&(flagsAreUndefined&&(flags=getFlags.call(pattern)),pattern=pattern.source),UNSUPPORTED_Y&&(sticky=!!flags&&-1<flags.indexOf("y"),sticky&&(flags=flags.replace(/y/g,"")));var result=inheritIfRequired(CORRECT_NEW?new NativeRegExp(pattern,flags):NativeRegExp(pattern,flags),thisIsRegExp?this:RegExpPrototype,RegExpWrapper);return UNSUPPORTED_Y&&sticky&&setInternalState(result,{sticky:sticky}),result},proxy=function proxy(key){(key in RegExpWrapper)||defineProperty(RegExpWrapper,key,{configurable:!0,get:function(){return NativeRegExp[key]},set:function(it){NativeRegExp[key]=it;}});},keys=getOwnPropertyNames(NativeRegExp),index=0;keys.length>index;)proxy(keys[index++]);RegExpPrototype.constructor=RegExpWrapper,RegExpWrapper.prototype=RegExpPrototype,redefine(global,"RegExp",RegExpWrapper);}setSpecies("RegExp");})();